# Generated by Django 2.2.24 on 2021-08-12 10:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CeleryTasks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('task_id', models.CharField(max_length=155, null=True)),
                ('status', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'celery_taskmeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('codeid', models.AutoField(db_column='CODEID', primary_key=True, serialize=False)),
                ('descr', models.CharField(db_column='DESCR', max_length=255)),
            ],
            options={
                'db_table': 'dbo].[COUNTRY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, db_column='CODE', max_length=25, null=True)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=100, null=True)),
                ('valuey0', models.FloatField(db_column='valuey0')),
                ('valuey1', models.FloatField(db_column='valuey1')),
                ('valuey2', models.FloatField(db_column='valuey2')),
                ('valuey3', models.FloatField(db_column='valuey3')),
                ('valuey4', models.FloatField(db_column='valuey4')),
                ('valuey5', models.FloatField(db_column='valuey5')),
            ],
            options={
                'db_table': 'CUSTOMERBROWSER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerDetail',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, db_column='CODE', max_length=25, null=True, verbose_name='Κωδικός')),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=255, null=True, verbose_name='Επωνυμία')),
                ('occupation', models.CharField(blank=True, db_column='OCCUPATION', max_length=255, null=True, verbose_name='Απασχόληση')),
                ('city', models.CharField(blank=True, db_column='CITY1', max_length=255, null=True, verbose_name='Πόλη')),
                ('district', models.CharField(blank=True, db_column='DISTRICT1', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=255, null=True)),
                ('street1', models.CharField(blank=True, db_column='STREET1', max_length=255, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='ZIPCODE1', max_length=255, null=True)),
            ],
            options={
                'db_table': 'dbo].[CUSTOMER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemFinData',
            fields=[
                ('masterid', models.IntegerField(db_column='MASTERID', primary_key=True, serialize=False)),
                ('costvalue', models.FloatField(db_column='COSTVALUE')),
            ],
            options={
                'db_table': 'dbo].[ITEMFINDATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemSup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastbuysupprice', models.FloatField(db_column='LASTBUYSUPPRICE', null=True)),
                ('lastbuysuppriceupdate', models.DateTimeField(db_column='LASTBUYSUPPRICEUPDATE', null=True)),
            ],
            options={
                'db_table': 'dbo].[ITEMSUP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemtrans',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('outputvalmode', models.SmallIntegerField(db_column='OUTPUTVALMODE', null=True)),
                ('outputquantmode', models.SmallIntegerField(db_column='OUTPUTQUANTMODE', null=True)),
                ('primaryqty', models.FloatField(db_column='PRIMARYQTY', null=True)),
                ('trnvalue', models.FloatField(db_column='TRNVALUE', null=True)),
                ('trndate', models.DateTimeField(db_column='TRNDATE', null=True)),
                ('fyeid', models.IntegerField(db_column='FYEID')),
                ('fipid', models.IntegerField(db_column='FIPID')),
                ('source', models.IntegerField(db_column='SOURCE')),
            ],
            options={
                'db_table': 'dbo].[ITEMTRANS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mesunit',
            fields=[
                ('codeid', models.AutoField(db_column='CODEID', primary_key=True, serialize=False)),
                ('descr', models.CharField(db_column='DESCR', max_length=255)),
            ],
            options={
                'db_table': 'dbo].[MESUNIT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OptimizationItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255)),
                ('safetystock', models.FloatField(null=True, verbose_name='Safety stock')),
                ('annual_consumption_value', models.FloatField(null=True, verbose_name='Annual consumption value')),
                ('annual_units', models.FloatField(null=True, verbose_name='Annual units sold')),
                ('percent_acv', models.FloatField(null=True, verbose_name='Percent of total annual consumption value')),
                ('percent_au', models.FloatField(null=True, verbose_name='Percent of total annual units sold')),
                ('ABC', models.CharField(max_length=10, null=True, verbose_name='ABC analysis category')),
                ('coeffv', models.FloatField(db_column='cv', null=True, verbose_name='Coefficient of variation (volatility)')),
                ('reorder_point', models.FloatField(db_column='reorder_point', null=True, verbose_name='Reorder point')),
            ],
            options={
                'db_table': 'OptimizationItem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OptimizationItemAttribute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('safetystock', models.FloatField(null=True, verbose_name='Safety stock')),
                ('annual_consumption_value', models.FloatField(null=True, verbose_name='Annual consumption value')),
                ('annual_units', models.FloatField(null=True, verbose_name='Annual units sold')),
                ('percent_acv', models.FloatField(null=True, verbose_name='Percent of total annual consumption value')),
                ('percent_au', models.FloatField(null=True, verbose_name='Percent of total annual units sold')),
                ('reorder_point', models.FloatField(db_column='reorder_point', null=True, verbose_name='Reorder point')),
            ],
            options={
                'db_table': 'OptimizationItemAttribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OptimizationItemForecast',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('forecast_period', models.IntegerField()),
                ('value', models.FloatField()),
                ('model', models.CharField(max_length=50)),
                ('seasonal_model', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'OptimizationItemForecast',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, db_column='SUBCODE1', max_length=25, null=True)),
                ('name', models.CharField(blank=True, db_column='DESCRIPTION', max_length=100, null=True)),
                ('descr2', models.CharField(blank=True, db_column='descr2', max_length=9999, null=True)),
                ('valuey0', models.FloatField(db_column='valuey0')),
                ('valuey1', models.FloatField(db_column='valuey1')),
                ('valuey2', models.FloatField(db_column='valuey2')),
                ('valuey3', models.FloatField(db_column='valuey3')),
                ('valuey4', models.FloatField(db_column='valuey4')),
                ('valuey5', models.FloatField(db_column='valuey5')),
            ],
            options={
                'db_table': 'ITEMSBROWSER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCat',
            fields=[
                ('codeid', models.AutoField(db_column='CODEID', primary_key=True, serialize=False)),
                ('descr', models.CharField(db_column='DESCR', max_length=255)),
            ],
            options={
                'db_table': 'dbo].[FLDCUSTBL1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('category', models.AutoField(db_column='category', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='name', max_length=255, null=True, verbose_name='Περιγραφή')),
                ('valuey0', models.FloatField(db_column='valuey0')),
                ('valuey1', models.FloatField(db_column='valuey1')),
                ('valuey2', models.FloatField(db_column='valuey2')),
                ('valuey3', models.FloatField(db_column='valuey3')),
                ('valuey4', models.FloatField(db_column='valuey4')),
                ('valuey5', models.FloatField(db_column='valuey5')),
            ],
            options={
                'db_table': 'ITEMCATEGORYBROWSER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, db_column='SUBCODE1', max_length=25, null=True, unique=True, verbose_name='Κωδικός')),
                ('name', models.CharField(blank=True, db_column='DESCRIPTION', max_length=255, null=True, verbose_name='Περιγραφή')),
                ('composition', models.CharField(blank=True, db_column='COMPOSITION', max_length=255, null=True, verbose_name='Αγγλική Περ.')),
                ('descr2', models.CharField(blank=True, db_column='descr2', max_length=9999, null=True, verbose_name='Πεδίο Αναζ.')),
                ('lastbuyprice', models.FloatField(db_column='lastbuyprice', help_text='Τελευταία τιμή αγοράς με κόστη φακέλου επιμερισμένα', verbose_name='Τελ. τιμή αγοράς')),
            ],
            options={
                'db_table': 'dbo].[MATERIAL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSubCategory',
            fields=[
                ('id', models.AutoField(db_column='CODEID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='DESCR', max_length=255)),
            ],
            options={
                'db_table': 'dbo].[FLDCUSTBL3',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductSubCategoryList',
            fields=[
                ('fltid3', models.AutoField(db_column='FLTID3', primary_key=True, serialize=False)),
                ('valuey0', models.FloatField(db_column='valuey0')),
                ('valuey1', models.FloatField(db_column='valuey1')),
                ('valuey2', models.FloatField(db_column='valuey2')),
                ('valuey3', models.FloatField(db_column='valuey3')),
                ('valuey4', models.FloatField(db_column='valuey4')),
                ('valuey5', models.FloatField(db_column='valuey5')),
                ('qy0', models.FloatField(db_column='qy0')),
                ('qy1', models.FloatField(db_column='qy1')),
                ('qy2', models.FloatField(db_column='qy2')),
                ('qy3', models.FloatField(db_column='qy3')),
                ('qy4', models.FloatField(db_column='qy4')),
                ('qy5', models.FloatField(db_column='qy5')),
            ],
            options={
                'db_table': 'ITEMSUBCATEGORYBROWSER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('A_percent', models.IntegerField()),
                ('B_percent', models.IntegerField()),
                ('C_percent', models.IntegerField()),
                ('lastforecast', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'Settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuppBalance',
            fields=[
                ('supid', models.AutoField(db_column='MASTERID', primary_key=True, serialize=False)),
                ('fyeid', models.IntegerField(db_column='FYEID')),
                ('fipid', models.IntegerField(db_column='FIPID')),
                ('masterperiodturnover', models.FloatField(verbose_name='MASTERPERIODTURNOVER')),
            ],
            options={
                'db_table': 'dbo].[SUPPBALANCESHEET',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(db_column='MASTERID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, db_column='CODE', max_length=25, null=True)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=100, null=True)),
                ('valuey0', models.FloatField(db_column='valuey0')),
                ('valuey1', models.FloatField(db_column='valuey1')),
                ('valuey2', models.FloatField(db_column='valuey2')),
                ('valuey3', models.FloatField(db_column='valuey3')),
                ('valuey4', models.FloatField(db_column='valuey4')),
                ('valuey5', models.FloatField(db_column='valuey5')),
            ],
            options={
                'db_table': 'SUPPLIERBROWSER',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupplierAttribute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('safetystock', models.FloatField(null=True, verbose_name='Safety stock')),
                ('annual_consumption_value', models.FloatField(null=True, verbose_name='Annual consumption value')),
                ('annual_units', models.FloatField(null=True, verbose_name='Annual units sold')),
                ('percent_acv', models.FloatField(null=True, verbose_name='Percent of total annual consumption value')),
                ('percent_au', models.FloatField(null=True, verbose_name='Percent of total annual units sold')),
            ],
            options={
                'db_table': 'SupplierAttribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupplierCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'SupplierCategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupplierDetail',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, db_column='CODE', max_length=25, null=True, verbose_name='Supplier code')),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=255, null=True, verbose_name='Supplier name')),
                ('occupation', models.CharField(blank=True, db_column='OCCUPATION', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='CITY1', max_length=255, null=True)),
                ('district', models.CharField(blank=True, db_column='DISTRICT1', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=255, null=True)),
                ('street1', models.CharField(blank=True, db_column='STREET1', max_length=255, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='ZIPCODE1', max_length=255, null=True)),
            ],
            options={
                'db_table': 'dbo].[SUPPLIER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FullItemStoreData',
            fields=[
                ('subcat', models.ForeignKey(db_column='subcat', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='items.ProductSubCategory', verbose_name='Υποκατηγορία SalesInsight')),
                ('itemstock', models.FloatField(verbose_name='Available stock')),
            ],
            options={
                'db_table': 'itemstock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OptimizationItemResults',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('forecast_period', models.IntegerField()),
                ('value', models.FloatField()),
                ('optimizationitem_id', models.ForeignKey(db_column='optimizationitem_id', on_delete=django.db.models.deletion.DO_NOTHING, to='items.OptimizationItem')),
            ],
            options={
                'db_table': 'OptimizationItemResults',
                'managed': True,
            },
        ),
    ]
